{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"about/","text":"About DeckMaster DeckMaster is a deck editor for the Yu-Gi-Oh! Trading Card Game. It features an enhanced deck editor with undo/redo and a live probability calculator. DeckMaster also includes a combo editor for use with the live probability features. DeckMaster is completely open-source, and is distributed under the MIT License . This allows anyone to use, modify and redistribute DeckMaster under certain conditions. It also allows people to contribute back to DeckMaster, as shown in our contributing guide .","title":"DeckMaster"},{"location":"about/#about-deckmaster","text":"DeckMaster is a deck editor for the Yu-Gi-Oh! Trading Card Game. It features an enhanced deck editor with undo/redo and a live probability calculator. DeckMaster also includes a combo editor for use with the live probability features. DeckMaster is completely open-source, and is distributed under the MIT License . This allows anyone to use, modify and redistribute DeckMaster under certain conditions. It also allows people to contribute back to DeckMaster, as shown in our contributing guide .","title":"About DeckMaster"},{"location":"deck/","text":"Deck Editor The deck editor is designed to be interactive and easy to use. There are however a lot of features in the deck editor (with more on the way), so here is some helpful documentation about each feature. Creating a new deck You can create a new deck in the start screen and using the menu action File > New Deck . When you create a new deck, it has no name/file. You can name it when you save the deck. Opening a deck You can open a deck using the start screen action, or the menu action File > Open Deck , or with the keyboard shortcut (Ctrl+O). Searching for cards Note: The filter is currently considered experimental. Report any problems here You can use the bar on the right hand side to search and add for cards. The filter allows you to search via things like card type, attack, attribute and more. The pagination at the bottom can be used to toggle between pages. Adding/Removing cards from the deck You can move cards about by dragging them. Additionally, you can right-click to add the from search, or remove them from the deck.","title":"Deck Editor"},{"location":"deck/#deck-editor","text":"The deck editor is designed to be interactive and easy to use. There are however a lot of features in the deck editor (with more on the way), so here is some helpful documentation about each feature.","title":"Deck Editor"},{"location":"deck/#creating-a-new-deck","text":"You can create a new deck in the start screen and using the menu action File > New Deck . When you create a new deck, it has no name/file. You can name it when you save the deck.","title":"Creating a new deck"},{"location":"deck/#opening-a-deck","text":"You can open a deck using the start screen action, or the menu action File > Open Deck , or with the keyboard shortcut (Ctrl+O).","title":"Opening a deck"},{"location":"deck/#searching-for-cards","text":"Note: The filter is currently considered experimental. Report any problems here You can use the bar on the right hand side to search and add for cards. The filter allows you to search via things like card type, attack, attribute and more. The pagination at the bottom can be used to toggle between pages.","title":"Searching for cards"},{"location":"deck/#addingremoving-cards-from-the-deck","text":"You can move cards about by dragging them. Additionally, you can right-click to add the from search, or remove them from the deck.","title":"Adding/Removing cards from the deck"},{"location":"first/","text":"First Use of DeckMaster The first time you launch DeckMaster, you'll see a welcome screen. This screen is the setup, and allows you to optionally link YGOPro/EDOPro to the app. Linking YGOPro/EDOPro If you wish to link YGOPro/EDOPro to the app, click on the button and navigate to the application's folder. You can change this later in settings. HINT: The folder is the one containing YGOPro.exe or EDOPro.exe Click Finish and begin using DeckMaster. That's all folks You are now free to enjoy DeckMaster and the features it offers. More documentation is available for each feature, if you need it.","title":"First Use"},{"location":"first/#first-use-of-deckmaster","text":"The first time you launch DeckMaster, you'll see a welcome screen. This screen is the setup, and allows you to optionally link YGOPro/EDOPro to the app.","title":"First Use of DeckMaster"},{"location":"first/#linking-ygoproedopro","text":"If you wish to link YGOPro/EDOPro to the app, click on the button and navigate to the application's folder. You can change this later in settings. HINT: The folder is the one containing YGOPro.exe or EDOPro.exe Click Finish and begin using DeckMaster.","title":"Linking YGOPro/EDOPro"},{"location":"first/#thats-all-folks","text":"You are now free to enjoy DeckMaster and the features it offers. More documentation is available for each feature, if you need it.","title":"That's all folks"},{"location":"install/","text":"Installation You can install DeckMaster's latest version via one of the pre-built installers, or by building it from the source code. Windows Installer Linux Installer Build From Source Windows Installer Head to the download page for the most recent version of DeckMaster . Download the installer.exe file and run it to install the app. You might be warned by Windows not to run the app. This is because the app is unsigned. Code signing can cost a lot of money, and for an individual developing free software, it doesn't make much sense to sign it. To continue using the installer, just click More info , then Run anyway . If the installer does not work on your architecture, you can always build from source . Linux & macOS Installers Head to the download page for the most recent version of DeckMaster . Download the linux-installer with your platform's installer extension (or installer.dmg on macOS) and run it to install the app. You can install the rpm build using a supported package manager like yum . You may be warned by your computer that the app is unknown. This is because the app is not signed. Code signing can cost a lot of money, and for an indifivual developing free software, it doesn't make much sense to sign my code. If the installer does not work, you can always build from source . Build From Source Follow these instructions to build DeckMaster from source. If you run into any problems, please open an issue . Install NodeJS Download the repository , and unzip it into an empty folder Run npm install to download dependancies Run npm run dev to run the app","title":"Installation"},{"location":"install/#installation","text":"You can install DeckMaster's latest version via one of the pre-built installers, or by building it from the source code. Windows Installer Linux Installer Build From Source","title":"Installation"},{"location":"install/#windows-installer","text":"Head to the download page for the most recent version of DeckMaster . Download the installer.exe file and run it to install the app. You might be warned by Windows not to run the app. This is because the app is unsigned. Code signing can cost a lot of money, and for an individual developing free software, it doesn't make much sense to sign it. To continue using the installer, just click More info , then Run anyway . If the installer does not work on your architecture, you can always build from source .","title":"Windows Installer"},{"location":"install/#linux-macos-installers","text":"Head to the download page for the most recent version of DeckMaster . Download the linux-installer with your platform's installer extension (or installer.dmg on macOS) and run it to install the app. You can install the rpm build using a supported package manager like yum . You may be warned by your computer that the app is unknown. This is because the app is not signed. Code signing can cost a lot of money, and for an indifivual developing free software, it doesn't make much sense to sign my code. If the installer does not work, you can always build from source .","title":"Linux &amp; macOS Installers"},{"location":"install/#build-from-source","text":"Follow these instructions to build DeckMaster from source. If you run into any problems, please open an issue . Install NodeJS Download the repository , and unzip it into an empty folder Run npm install to download dependancies Run npm run dev to run the app","title":"Build From Source"},{"location":"keys/","text":"Keybindings This lists the default keybindings used by DeckMaster. Ctrl+F1 Opens the documentation in your default browser Ctrl+O Opens a new deck Ctrl+Shift+O Opens a new YCB Ctrl+S Saves the current deck Ctrl+Shift+S Saves the current deck in a chosen file Ctrl+, Opens the settings","title":"Keybindings"},{"location":"keys/#keybindings","text":"This lists the default keybindings used by DeckMaster. Ctrl+F1 Opens the documentation in your default browser Ctrl+O Opens a new deck Ctrl+Shift+O Opens a new YCB Ctrl+S Saves the current deck Ctrl+Shift+S Saves the current deck in a chosen file Ctrl+, Opens the settings","title":"Keybindings"},{"location":"settings/","text":"Settings The settings meny can be accessed via Help > Settings or the Ctrl+, keybinding. YGOPro/EDOPro Path This setting defines the path to the folder containing your YGOPro/EDOPro app. The folder should contain YGOPro.exe or EDOPro.exe along with folders like pics and deck . Reset All Settings As the name states, this resets all of DeckMaster's settings. However, this will not delete any decks/combos you have created with DeckMaster.","title":"Settings"},{"location":"settings/#settings","text":"The settings meny can be accessed via Help > Settings or the Ctrl+, keybinding.","title":"Settings"},{"location":"settings/#ygoproedopro-path","text":"This setting defines the path to the folder containing your YGOPro/EDOPro app. The folder should contain YGOPro.exe or EDOPro.exe along with folders like pics and deck .","title":"YGOPro/EDOPro Path"},{"location":"settings/#reset-all-settings","text":"As the name states, this resets all of DeckMaster's settings. However, this will not delete any decks/combos you have created with DeckMaster.","title":"Reset All Settings"},{"location":"ycb-query/","text":"YCB Query The YCB Query language is used in combo modules created in the combo editor. A query is simply a line of text that explains what card(s) you are looking for. There are a few ways of finding a match which I'll show you below. Exact Match (ID) If there is only a single card you wish to match, you can use the card's ID as the entire query. Example: Otoshidamashii 101104031 Field Matching To match multiple cards that match a particular description, you can use field matching. Field matching takes something about a card (such as the name) and compares it to the given value for that field. Each field is essentially a piece of information about the card. Example: Matches all cards with melffy in the name (not type sensitive) name=melffy You can match multiple fields at once by using a comma between each pair. name=melffy,type=spell Arrays In a YCB file you will be able to create arrays. Arrays are a list of querys. If one query in an array matches a card, it will be accepted as a valid card. You can use an array with the arrays. prefix followed by the array's name. For example: I have an array named starters and want to match a card if it is in the array. arrays.starters Fields & Values name will match any card who's name includes the value given desc will match any card who's card text includes the value given type will match any card who's card type includes the value given ( spell as a value matches Spell Card ) race will match any monster who's type includes the value given atk will match any monster who's attack is equal to the value given def will match any monster who's defence is equal to the value given level will match any monster who's level is equal to the value given attribute will match any monster who's attribute includes the value given linkval will match any monster who's link value is equal to the value given If you think I have missed out a field, please open an issue on GitHub .","title":"YCB Query"},{"location":"ycb-query/#ycb-query","text":"The YCB Query language is used in combo modules created in the combo editor. A query is simply a line of text that explains what card(s) you are looking for. There are a few ways of finding a match which I'll show you below.","title":"YCB Query"},{"location":"ycb-query/#exact-match-id","text":"If there is only a single card you wish to match, you can use the card's ID as the entire query. Example: Otoshidamashii 101104031","title":"Exact Match (ID)"},{"location":"ycb-query/#field-matching","text":"To match multiple cards that match a particular description, you can use field matching. Field matching takes something about a card (such as the name) and compares it to the given value for that field. Each field is essentially a piece of information about the card. Example: Matches all cards with melffy in the name (not type sensitive) name=melffy You can match multiple fields at once by using a comma between each pair. name=melffy,type=spell","title":"Field Matching"},{"location":"ycb-query/#arrays","text":"In a YCB file you will be able to create arrays. Arrays are a list of querys. If one query in an array matches a card, it will be accepted as a valid card. You can use an array with the arrays. prefix followed by the array's name. For example: I have an array named starters and want to match a card if it is in the array. arrays.starters","title":"Arrays"},{"location":"ycb-query/#fields-values","text":"name will match any card who's name includes the value given desc will match any card who's card text includes the value given type will match any card who's card type includes the value given ( spell as a value matches Spell Card ) race will match any monster who's type includes the value given atk will match any monster who's attack is equal to the value given def will match any monster who's defence is equal to the value given level will match any monster who's level is equal to the value given attribute will match any monster who's attribute includes the value given linkval will match any monster who's link value is equal to the value given If you think I have missed out a field, please open an issue on GitHub .","title":"Fields &amp; Values"},{"location":"ycb/","text":"Yu-Gi-Oh! Combo File Format The .ycb file format is designed to store starting hand combinations that can be used to calculate the overall consistency of a deck. DeckMaster has a built-in display for these starting hand percentages, and you can add them using a combo module stored in a .ycb file. The .ycb format is a JSON formatted document that follows a specific schema. In the future I will be implementing a built-in combo editor that removes the need to understand JSON. But for now, you must create your own .ycb files or import them from a trusted source. Examples I have written example combo modules that you can use yourself either to test your deck or as inspiration to make your own. Hand Traps Schema { \"name\": {string} The name of your combo module, \"format_version\": {int} (always 0, will change in the future after 1.0.0), \"version\": {string} The version of your combo module, \"author\": {string} The name of the person who created the module, \"combos\": {list of objects} A list of all combos [ { \"name\": {string} combo name, \"desc\": {string} a description of the combo, \"turn\": {string} can be first or second, \"variants\": {list of objects} all versions of this specific combo (all possible opening hands) [ { \"tests\": {list of objects} all tests that must be true for the combo to be possible [ { \"target\": {string} location of the card (can be hand or deck), \"query\": {string} a ycb query to specify what the card could be, \"min\": {int} minimum number of cards matching query that need to be in target, \"max\": {int} maximum number of cards matching query that need to be in target } ] } ] } ] } YCB Query A YCB query is simply a string of names and values seperated by commas that describe all cards that are allowed in the test. Exact Match If the YCB query is only a card id (\"38814750\" is Psy-Framegear Gamma), then DeckMaster will automatically match it to just the card that matches the id. NOTE: Do not include any leading 0s. Limit Reverse would be \"27551\" not \"00027551\" Using Card Data You can use card data such as the name, level, or card text to match cards. The following is an example of a combo test that matches all cards that have a dark attribute. { \"target\": \"hand\", \"query\": \"attribute=dark\", \"min\": 1 } Queries targeting \"atk\", \"def\", \"level\" or \"linkval\" will compare the exact value. All other queries will check to see if your value is included in the exact value. For example, this test matches all cards with \"tenyi spirit\" in the name and are level seven. { \"target\": \"hand\", \"query\": \"name=tenyi spirit,level=7\", \"min\": 1 } All possible names for card data are as follows. name type desc atk def level race attribute archetype linkval scale Arrays If you have one or more combos that need 1 match out of a list of queries, you can use arrays. Arrays are shared between all combos in the module. If one or more of the queries in the array return true , the test will pass. The following code matches any cards that have 0 attack or 0 defense. { \"name\": \"Example array module\", ... \"arrays\": { \"my_cardlist\": [ \"atk=0\", \"def=0\" ] }, \"combos\": [ { \"name\": \"1+ of cards in array\", \"desc\": \"Chance of opening 1+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 1 } ] } ] }, { \"name\": \"2+ of cards in array\", \"desc\": \"Chance of opening 2+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 2 } ] } ] }, { \"name\": \"3+ of cards in array\", \"desc\": \"Chance of opening 2+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 3 } ] } ] } ] }","title":"YCB"},{"location":"ycb/#yu-gi-oh-combo-file-format","text":"The .ycb file format is designed to store starting hand combinations that can be used to calculate the overall consistency of a deck. DeckMaster has a built-in display for these starting hand percentages, and you can add them using a combo module stored in a .ycb file. The .ycb format is a JSON formatted document that follows a specific schema. In the future I will be implementing a built-in combo editor that removes the need to understand JSON. But for now, you must create your own .ycb files or import them from a trusted source.","title":"Yu-Gi-Oh! Combo File Format"},{"location":"ycb/#examples","text":"I have written example combo modules that you can use yourself either to test your deck or as inspiration to make your own. Hand Traps","title":"Examples"},{"location":"ycb/#schema","text":"{ \"name\": {string} The name of your combo module, \"format_version\": {int} (always 0, will change in the future after 1.0.0), \"version\": {string} The version of your combo module, \"author\": {string} The name of the person who created the module, \"combos\": {list of objects} A list of all combos [ { \"name\": {string} combo name, \"desc\": {string} a description of the combo, \"turn\": {string} can be first or second, \"variants\": {list of objects} all versions of this specific combo (all possible opening hands) [ { \"tests\": {list of objects} all tests that must be true for the combo to be possible [ { \"target\": {string} location of the card (can be hand or deck), \"query\": {string} a ycb query to specify what the card could be, \"min\": {int} minimum number of cards matching query that need to be in target, \"max\": {int} maximum number of cards matching query that need to be in target } ] } ] } ] }","title":"Schema"},{"location":"ycb/#ycb-query","text":"A YCB query is simply a string of names and values seperated by commas that describe all cards that are allowed in the test.","title":"YCB Query"},{"location":"ycb/#exact-match","text":"If the YCB query is only a card id (\"38814750\" is Psy-Framegear Gamma), then DeckMaster will automatically match it to just the card that matches the id. NOTE: Do not include any leading 0s. Limit Reverse would be \"27551\" not \"00027551\"","title":"Exact Match"},{"location":"ycb/#using-card-data","text":"You can use card data such as the name, level, or card text to match cards. The following is an example of a combo test that matches all cards that have a dark attribute. { \"target\": \"hand\", \"query\": \"attribute=dark\", \"min\": 1 } Queries targeting \"atk\", \"def\", \"level\" or \"linkval\" will compare the exact value. All other queries will check to see if your value is included in the exact value. For example, this test matches all cards with \"tenyi spirit\" in the name and are level seven. { \"target\": \"hand\", \"query\": \"name=tenyi spirit,level=7\", \"min\": 1 } All possible names for card data are as follows. name type desc atk def level race attribute archetype linkval scale","title":"Using Card Data"},{"location":"ycb/#arrays","text":"If you have one or more combos that need 1 match out of a list of queries, you can use arrays. Arrays are shared between all combos in the module. If one or more of the queries in the array return true , the test will pass. The following code matches any cards that have 0 attack or 0 defense. { \"name\": \"Example array module\", ... \"arrays\": { \"my_cardlist\": [ \"atk=0\", \"def=0\" ] }, \"combos\": [ { \"name\": \"1+ of cards in array\", \"desc\": \"Chance of opening 1+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 1 } ] } ] }, { \"name\": \"2+ of cards in array\", \"desc\": \"Chance of opening 2+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 2 } ] } ] }, { \"name\": \"3+ of cards in array\", \"desc\": \"Chance of opening 2+ card from the array\", \"turn\": \"first\", \"variants\": [ { \"tests\": [ { \"target\": \"hand\", \"query\": \"arrays.my_cardlist\", \"min\": 3 } ] } ] } ] }","title":"Arrays"}]}